<sub>&#x1F6A8; <strong>Autogenerated!</strong> See <a href="https://github.com/ponyfoo/articles/tree/noindex/contributing.markdown"><code>contributing.markdown</code></a> for details. See also: <a href="https://ponyfoo.com/articles/make-all-images-on-your-website-responsive-in-3-easy-steps">web version</a>.</sub>

<a href="https://ponyfoo.com/articles/make-all-images-on-your-website-responsive-in-3-easy-steps"><div><img src="https://images.ponyfoo.com/uploads/motion-1641779-30a925edf8c84888a55e50fbe76b7576.jpg" alt="Make All Images on Your Website Responsive in 3 Easy Steps"></div></a>

<h1>Make All Images on Your Website Responsive in 3 Easy Steps</h1>

<p><kbd>cloudinary</kbd> <kbd>responsive</kbd></p>

<blockquote><p>Images are crucial to website performance, but most sites still don&#x2019;t implement responsive images. Cloudinary provides an alternative to <code>srcset</code> and <code>sizes</code> when implementing responsive images.</p>
</blockquote>

<div><p>Images are crucial to website performance, but most still don&#x2019;t implement responsive images. It&#x2019;s not just about fitting an image on the screen, but also making the the image size relatively rational to the device. The <code class="md-code md-code-inline">srcset</code> and <code class="md-code md-code-inline">sizes</code> options, which are your best hit are hard to implement. Cloudinary provides an easier way, which we will discuss in this article.</p></div>

<blockquote></blockquote>

<div><p>In this blog, I&#x2019;ll share a valuable shortcut that can help you turn all images responsive. But first, let&#x2019;s talk a bit about what responsive images are: an image is considered responsive if it retains its quality on varying device sizes without having an unpleasant impact on performance.</p> <p>To better understand this concept, let&#x2019;s take a look at some device dimensions:</p> <h4 id="possible-full-width-image-dimensions-by-screen-sizes">Possible Full-Width Image Dimensions by Screen Sizes</h4> <ul> <li><strong>Large/X-Large commercial screens</strong>: 2000+ pixels</li> <li><strong>Websites</strong>: 760 - 1200 pixels</li> <li><strong>Mobile Phones</strong>: &lt; 760 pixels</li> </ul> <p>Let&#x2019;s assume you have a mobile-first strategy for building responsive apps. You may decide to use 760px images throughout, without considering larger screens. If these images are meant to take the full width of the devices on which they are rendered, then your content will look distorted and unprofessional on websites or commercial screens.</p> <p>Your next attempt would be to use the largest possible image (2000px) and scale it down based on the screen sizes on which it is displayed.</p></div>

<div><h2 id="down-scaling-images">Down-Scaling Images</h2> <p>Using CSS or JavaScript to down-scale images only makes them <em>dimensionally</em> responsive. The following image illustrates this better:</p> <div class="mde-inline mde-50"><figure><img alt="Down-scaling illustration on mobile" class="" src="http://res.cloudinary.com/christekh/image/upload/c_crop,w_auto/v1501763693/Screen_Shot_2017-08-03_at_1.17.28_PM_aukf2g.png"></figure> </div><div class="mde-inline mde-50"><figure><img alt="Down-scaling illustration on desktop" class="" src="http://res.cloudinary.com/christekh/image/upload/c_crop,w_auto/v1501763696/Screen_Shot_2017-08-03_at_1.20.05_PM_ogvphp.png"></figure> </div><p>Both on web and mobile devices, the size is still <strong>8.9MB</strong>. Bearing in mind that your mobile phones have less resources than your PC, we still have more work to do.</p> <p>Using only a down-scaling approach is not ideal because it does not account for the size of the image; just its dimensions.</p> <p>We have already seen that up-scaling wouldn&#x2019;t work either, hence we need something that handles both dimensions and size.</p> <h2 id="size-fitting">Size-Fitting</h2> <p>Our best option is to generate images based on the screen size and render them. This process can be extremely complex, but there&#x2019;s a shortcut that can help you automate much of the process. You can make all images responsive in three easy steps with <a href="http://cloudinary.com/" target="_blank" rel="noopener noreferrer">Cloudinary</a>:</p> <h3 id="1-include-cloudinary-in-your-project">1. Include Cloudinary in Your Project</h3> <p>Add the Cloudinary SDK to your project simply by including it in your index.html using script tags:</p> <pre class="md-code-block"><code class="md-code md-lang-xml"><span class="md-code-tag">&lt;<span class="md-code-title">script</span>
  <span class="md-code-attribute">src</span>=<span class="md-code-value">&quot;https://cdnjs.cloudflare.com/ajax/libs/cloudinary-core/2.3.0/cloudinary-core-shrinkwrap.min.js&quot;</span>&gt;</span><span>
</span><span class="md-code-tag">&lt;/<span class="md-code-title">script</span>&gt;</span>
</code></pre> <h3 id="2-add-images-with-data-src">2. Add Images with <code class="md-code md-code-inline">data-src</code></h3> <p>You don&#x2019;t want the images rendered immediately, until JavaScript runs. Hence, include the image using the <code class="md-code md-code-inline">data-src</code> attribute instead of <code class="md-code md-code-inline">src</code>:</p> <pre class="md-code-block"><code class="md-code md-lang-xml"><span class="md-code-tag">&lt;<span class="md-code-title">img</span>
  <span class="md-code-attribute">data-src</span>=<span class="md-code-value">&quot;
    http://res.cloudinary.com/christekh/image/upload/w_auto,c_scale/v1501761946/pexels-photo-457044_etqwsd.jpg
  &quot;</span>
  <span class="md-code-attribute">alt</span>=<span class="md-code-value">&quot;&quot;</span>
  <span class="md-code-attribute">class</span>=<span class="md-code-value">&quot;cld-responsive&quot;</span> /&gt;</span>
</code></pre> <p>Using this approach, Cloudinary analyzes your browser screen first, resizes the image saved in Cloudinary storage as provided in <code class="md-code md-code-inline">data-src</code>, and then renders the image in the appropriate size and dimension using JavaScript.</p> <p>Two things to note from the tag:</p> <ul> <li><code class="md-code md-code-inline">w_auto,c_scale</code> transformation parameters tell Cloudinary to dynamically generate an image URL scaled to the correct width value, based on the detected width actually available for the image in the containing element.</li> <li>The class <code class="md-code md-code-inline">cld-responsive</code> tells Cloudinary which images to apply this feature too.</li> </ul> <h3 id="3-javascript-call">3. JavaScript Call</h3> <p>Finally, initialize a Cloudinary instance in your JavaScript files and call the <code class="md-code md-code-inline">responsive</code> method on this instance:</p> <pre class="md-code-block"><code class="md-code md-lang-javascript"><span class="md-code-keyword">const</span> cl = cloudinary.Cloudinary.new({ cloud_name: <span class="md-code-string">&apos;YOUR_CLOUD_NAME&apos;</span> })
cl.responsive()
</code></pre> <p>Remember to <a href="https://cloudinary.com/users/register/free" target="_blank" rel="noopener noreferrer">create a free Cloudinary</a> account so you can receive a cloud name for configuring this instance.</p> <p>This piece of code will walk through the DOM, find all image tags with the class <code class="md-code md-code-inline">cld-responsive</code> to apply <strong>size</strong> and <strong>dimension</strong> fitting images on them.</p> <h2 id="final-words">Final Words</h2> <p>Always keep in mind that when you use CSS like the following code below to make images responsive, it does not guarantee a good user experience:</p> <pre class="md-code-block"><code class="md-code md-lang-css"><span class="md-code-tag">img</span> <span class="md-code-rules">{
  <span><span class="md-code-attribute">width</span>:<span class="md-code-value"> <span class="md-code-number">100%</span></span></span>;
  <span><span class="md-code-attribute">height</span>:<span class="md-code-value"> auto</span></span>;
<span>}</span></span>
</code></pre> <p>The sizes of these images remain the same. Large images on mobile devices eat up resources (like allocated memory and running processes) causing slow downloads or unexpected behavior on the user&#x2019;s device. Responsive images ensure that users save lots of data bandwidth &amp; have great experiences when using your image-rich website or app.</p> <p>Lastly, it&#x2019;s good to keep in mind that the suggested approach relies on JavaScript. Therefore, the preloading capabilities provided by <code class="md-code md-code-inline">srcset</code> and <code class="md-code md-code-inline">sizes</code> are sacrificed and your browser must have JavaScript enabled for this feature to work.</p></div>
